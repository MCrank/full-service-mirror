name: fsm-build

env:
  # CHART_RELEASE_NAME: full-service-mirror
  # CHART_PATH: ./chart
  SGX_MODE: HW
  IAS_MODE: PROD
  RUST_BACKTRACE: full
  CONSENSUS_ENCLAVE_CSS: /var/tmp/consensus-enclave.css
  INGEST_ENCLAVE_CSS: /var/tmp/ingest-enclave.css

on:
  push:
    branches:
      - 'mc-release'
      # - 'main'
      - 'develop'
      - 'release/*'
      - 'feature/*'
      - 'hotfix/*'
    tags:
      - 'v*'

jobs:
  # Determine tag if it is release branch or actual tag
  tag:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release') || github.ref == 'refs/tags/v'
    permissions:
      contents: write
    outputs:
      release_semver: ${{ steps.release_semver.outputs.tag }}
      new_tag: ${{ steps.tag_bump.outputs.new }}

    steps:
      # Release branch or tag
      - name: Set the semver for tagging
        id: release_semver
        shell: bash
        run: |
          echo ${GITHUB_REF}
          echo ${GITHUB_REF_NAME}
          if [[ "${GITHUB_REF}" =~ 'refs/heads/release' ]]; then
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          else
            echo "::set-output name=tag::${GITHUB_REF_NAME}"
          fi

      - name: Print Release Branch semver
        if: startsWith(github.ref, 'refs/heads/release')
        run: |
          echo '${{ steps.release_semver.outputs.tag }}'

      # Requires mobilecoin-ci user R/W access and ACTIONS_TOKEN
      # - name: Github Tag Bump
      #   id: tag_bump
      #   # if: startsWith(github.ref, 'refs/heads/release')
      #   uses: anothrNick/github-tag-action@1.36.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
      #     # CUSTOM_TAG: ${{ steps.release_semver.outputs.tag }}
      #     # INITIAL_VERSION: ${{ steps.release_semver.outputs.tag }}
      #     DRY_RUN: true
      #     RELEASE_BRANCHES: main
      #     PRERELEASE_SUFFIX: pre
      #     WITH_V: 'true'
      #     DEFAULT_BUMP: patch

      - name: Tagging
        id: tag_bump
        uses: craig-day/compute-tag@v13
        with:
          github_token: ${{ secrets.ACTIONS_TOKEN }}
          tag: ${{ steps.release_semver.outputs.tag }}
          prerelease_suffix: pre

  # docker:
  #   if: startsWith(github.ref, 'refs/heads/release') || github.ref == 'refs/tags/v'
  #   needs: build
  #   uses: ./.github/workflows/docker.yaml
  #   with:
  #     tag: ${{ needs.build.outputs.release_semver }}

  # Only create a new tag if push to develop(prerelease) or main(release)
  # Will automatically bump "#patch" by default
  # Use "#major", "#minor", "#patch". "#none" in commit message to adjust bump.
  #
  # Requires mobilecoin-ci user R/W access and ACTIONS_TOKEN
  # tag:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: '0'
  #     - name: Github Tag Bump
  #       uses: anothrNick/github-tag-action@1.36.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
  #         CUSTOM_TAG: ${{ steps.release_semver.outputs.semver }}
  # RELEASE_BRANCHES: main
  # PRERELEASE_SUFFIX: pre
  # WITH_V: 'true'
  # DEFAULT_BUMP: patch

  # deploy-develop:
  #   if: github.ref == 'refs/heads/develop'
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   container:
  #     image: alpine/helm
  #     options: --entrypoint /bin/sh
  #   env:
  #     RANCHER_URL: ${{ secrets.RANCHER_URL }}
  #     RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
  #     RANCHER_CLUSTER: $${{ secrets.DEVELOP_CLUSTER }}
  #     RANCHER_CLUSTER_NAMESPACE: ${{ secrets.DEVELOP_NAMESPACE }}
  #     VALUES: ${{ secrets.TESTNET_VALUES }}
  #     TAGS: $${{ needs.docker.outputs.tags }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy
  #       run: |
  #         apk add --no-cache bash curl jq
  #         .github/workflows/helpers/rancher_deploy.sh

  # deploy-main:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   container:
  #     image: alpine/helm
  #     options: --entrypoint /bin/sh
  #   env:
  #     RANCHER_URL: ${{ secrets.RANCHER_URL }}
  #     RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
  #     RANCHER_CLUSTER: ${{ secrets.DEVELOP_CLUSTER }}
  #     RANCHER_CLUSTER_NAMESPACE: ${{ secrets.MAIN_NAMESPACE }}
  #     VALUES: ${{ secrets.TESTNET_VALUES }}
  #     TAGS: ${{ needs.docker.outputs.tags }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy
  #       run: |
  #         apk add --no-cache bash curl jq
  #         .github/workflows/helpers/rancher_deploy.sh
