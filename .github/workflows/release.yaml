name: fsm-release

env:
  # DOCKERHUB_REPO: mobilecoin/full-service-mirror
  DOCKERHUB_REPO: mcrank/full-service-mirror
  # SGX_MODE: HW
  # IAS_MODE: PROD
  # RUST_BACKTRACE: full
  # CONSENSUS_ENCLAVE_CSS: /var/tmp/consensus-enclave.css
  # INGEST_ENCLAVE_CSS: /var/tmp/ingest-enclave.css

on:
  # workflow_call:
  #   secrets:
  #     action_token:
  #       required: true
  push:
    tags:
      - 'v*'

jobs:
  pre-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - name: test
            network: testnet
          - name: prod
            network: mainnet

    steps:
      # Does the tag have the "pre" key word in it? Will mark it as prerelease
      - name: Is Prerelease
        shell: bash
        id: prerelease
        run: |
          if [[ "${GITHUB_REF}" =~ pre ]]; then
            echo ::set-output name=value::true
          else
            echo ::set-output name=value::false
          fi

      # Download the build artifact if it is release/v* branch
      - name: Download Build Artifact
        id: artifact_download
        uses: actions/download-artifact@v3
        with:
          name: full-service-mirror_${{ matrix.network }}
          path: /var/tmp

      - name: Display download structure
        run: ls -la /var/tmp/

      - name: Create Prerelease Artifact
        run: mv /var/tmp/${{ github.sha }}-${{ matrix.network }}.tar.gz /var/tmp/${{ github.ref_name }}-${{ matrix.network }}.tar.gz

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.value }}
          files: /var/tmp/${{ github.ref_name }}-${{ matrix.network }}.tar.gz

      # - name: Extract Release
      #   run: |
      #     mkdir -p build_artifacts/${{ matrix.network }}
      #     tar xzvf /var/tmp/${{ github.sha }}-${{ matrix.network }}.tar.gz -C build_artifacts/${{ matrix.network }}

      # - name: Get Current Pre-Release
      #   id: current_release
      #   uses: joutvhu/get-release@v1
      #   with:
      #     debug: true
      #     latest: true
      #     prerelease: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Download Latest Pre-Release
      #   if: steps.artifact_cache.outputs.cache-hit != 'true'
      #   uses: duhow/download-github-release-assets@v1
      #   with:
      #     tag: ${{ steps.current_release.outputs.tag_name }}
      #     files: |
      #       ${{ steps.current_release.outputs.tag_name }}-${{ matrix.network }}.tar.gz
      #     target: /var/tmp/${{ steps.current_release.outputs.tag_name }}-${{ matrix.network }}.tar.gz

      # # Create a Release
      # - name: Create Release
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   run: |
      #     mkdir -p release
      #     cd release && tar -czvf ${{ github.ref_name }}-${{ matrix.network }}.tar.gz -C ../build_artifacts/${{ matrix.network }}/ .

      # # Does the tag have the "pre" key word in it? Will mark it as prerelease
      # - name: Is Prerelease
      #   shell: bash
      #   id: prerelease
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   run: |
      #     if [[ "${GITHUB_REF}" =~ pre ]]; then
      #       echo ::set-output name=value::true
      #     else
      #       echo ::set-output name=value::false
      #     fi

      # - name: Upload Release
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     prerelease: ${{ steps.prerelease.outputs.value }}
      #     files: release/${{ github.ref_name }}-${{ matrix.network }}.tar.gz

  #  START RELEASE FROM HERE
  # release:
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/heads/main')
  #   needs: tag
  #   strategy:
  #     matrix:
  #       include:
  #         - name: test
  #           network: testnet
  #         - name: prod
  #           network: mainnet

  #   steps:
  #     - name: Get Current Pre-Release
  #       id: current_release
  #       uses: joutvhu/get-release@v1
  #       with:
  #         debug: true
  #         latest: true
  #         prerelease: true
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Download Latest Pre-Release
  #       if: steps.artifact_cache.outputs.cache-hit != 'true'
  #       uses: duhow/download-github-release-assets@v1
  #       with:
  #         tag: ${{ steps.current_release.outputs.tag_name }}
  #         files: |
  #           ${{ steps.current_release.outputs.tag_name }}-${{ matrix.network }}.tar.gz
  #         target: /var/tmp/${{ steps.current_release.outputs.tag_name }}-${{ matrix.network }}.tar.gz

  #     - name: Display download structure
  #       run: ls -la /var/tmp/
