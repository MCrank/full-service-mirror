name: docker

env:
  # DOCKER_REPO: mobilecoin/full-service-mirror
  DOCKER_REPO: mcrank/full-service-mirror

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  docker:
    # if: startsWith(github.ref, 'refs/tags/v')
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    # needs: build
    strategy:
      matrix:
        include:
          - namespace: test
            network: testnet
          - namespace: prod
            network: mainnet
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Start with clean workspace
        run: sudo find . -mindepth 1 -maxdepth 1 -exec rm -rf {} \;

      - name: Checkout with submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache Build Binaries
        id: artifact_cache
        uses: actions/cache@v2
        with:
          path: |
            build_artifacts
          key: ${{ runner.os }}-${{ matrix.network }}-${{ secrets.CACHE_VERSION }}-build-cargo-artifacts-${{ hashFiles('**/*.rs', '**/*.proto', '**/Cargo.toml')}}

      # Caching seems to not work when you push a tag (I think because of scope) so download the just uploaded release
      # See issue here: https://github.com/actions/cache/issues/556
      - name: Download Release on Cache Miss
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        uses: duhow/download-github-release-assets@v1
        with:
          tag: ${{ inputs.tag }}
          files: |
            ${{ inputs.tag }}-${{ matrix.network }}.tar.gz
          target: /var/tmp/${{ inputs.tag }}-${{ matrix.network }}.tar.gz

      - name: Extract Release
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p build_artifacts/${{ matrix.network }}
          tar xzvf /var/tmp/${{ inputs.tag }}-${{ matrix.network }}.tar.gz -C build_artifacts/${{ matrix.network }}

      - name: Generate Docker Tags
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          flavor: |
            latest=false
            suffix=-${{ matrix.network }}
          tags: |
            type=semver,pattern=v{{version}},priority=20
            type=sha,priority=10

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Publish to DockerHub
        id: docker_publish_dockerhub
        uses: docker/build-push-action@v2
        with:
          build-args: |
            NETWORK=${{ matrix.network }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: Dockerfile.ci
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
